@using ComercialCore.Models
@using CompraVentaCore.Models
@model CompraVentaCore.Models.Compra

@{
    ViewBag.Title = "Editar Compra";
}

<h1 class="message-body">@ViewBag.Title.</h1>

@using (Html.BeginForm("Editar", "Compras", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary()
    <div id="compraController" ng-controller="compraController">
        <div class="col-md-12">
            <div class="form-group">
                @{
                    Html.RenderAction("DiaContable", "PeriodoContable");
                }
            </div>
            <div class="form-group">
                @{
                    Html.RenderPartial("_DetalleCompraPartial", new DetalleDeCompra());
                }
            </div>
            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    @Html.ActionLink("Atrás", "Index", "Compras", null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    </div>
                    }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $(".select").chosen();

            $('.nuevo').tooltip();

            $('#comprar-btn').click(function () {
                $('#form-detalle-compra').remove();
            });

            $("#ProductoId").change(function () {
                var msg = $("#ProductoId option:selected").val();
                angular.element('#compraController').scope().fetchUnidades(msg);
                angular.element('#compraController').scope().$apply();
            });
        });

        erp.controller('compraController', [
            '$scope', '$http', function ($scope, $http) {
                $scope.loading = true;
                $scope.addMode = false;
                $scope.tieneError = false;
                $scope.error = "";
                $scope.select_changed = 0;
                $scope.entidad = {};
                $scope.newEntidad = {};

                $scope.productos = [];
                $scope.urlProductos = '@Url.Action("ListaProductos","Productos")';

                $scope.fetchProductos = function () {
                    $http.get($scope.urlProductos).then(function (result) {
                        $scope.productos = result.data;
                        $scope.select_changed++;
                    });
                }

                $scope.agregarEntidadModal = function () {
                    $("#modal").modal('show');
                }

                $scope.fetchProductos();

                $scope.unidades = [];
                $scope.urlUnidades = '@Url.Action("ListaUnidadesDeMedida","Productos")';

                $scope.fetchUnidades = function (id) {
                    $http.get($scope.urlUnidades + "/" + id).then(function (result) {
                        $scope.unidades = result.data;
                        $scope.select_changed++;
                    });
                }

                $scope.entidades = [];
                $scope.urlEntidades = '@Url.Action("Entidades","Compras")';

                $scope.fetchEntidades = function () {
                    $http.get($scope.urlEntidades).then(function (result) {
                        $scope.entidades = result.data;
                        $scope.select_changed++;
                    });
                }

                $scope.fetchEntidades();

                $scope.urlAgregarEntidad = '@Url.Action("AgregarEntidad")';
                $scope.agregarEntidad = function (nombre) {
                    $http.post($scope.urlAgregarEntidad, { nombre: nombre }).then(function (result) {
                        $scope.entidades = result.data;
                        $scope.select_changed++;
                    });
                }

                //$scope.fetchUnidades();

                $scope.detallesCompra = @Html.Raw(Json.Encode(Model.Productos.Select(e => new {
                                       e.Id, ProductoId = e.ProductoId , NombreProducto = e.Producto.Nombre, e.Cantidad, UnidadId = e.UnidadDeMedidaId, NombreUnidad = e.UnidadDeMedida.Siglas, e.ImporteTotal
                })));;
                $scope.newDetalle = {};
                //$scope.newCarga.Aprobado = true;

                $scope.toggleEdit = function () {
                    this.detalle.editMode = !this.detalle.editMode;
                };
                $scope.agregarDetalle = function () {
                    //var index = $scope.cargas.length;
                    $scope.show = false;
                    var detalleNuevo = {};
                    var valido = true;
                    if ($scope.newDetalle.Cantidad == null || $scope.newDetalle.ProductoId === "") {
                        $scope.error = "Debe insertar los datos del producto.";
                        $scope.tieneError = true;
                        valido = false;
                    }
                    if (valido && $scope.detallesCompra.find(function (a) { if ($scope.newDetalle.ProductoId === a.ProductoId) { return true; } return false; })) {
                        $scope.error = "Ya se exite este producto en la compra.";
                        $scope.tieneError = true;
                        valido = false;
                    }
                    if (valido) {
                        var url = "/Compras/AgregarDetalle";
                        var data = {
                            CompraId: '@Model.Id',
                            ProductoId: $scope.newDetalle.ProductoId.Id,
                            UnidadDeMedidaId : $scope.newDetalle.UnidadId.Id,
                            Cantidad: $scope.newDetalle.Cantidad,
                            ImporteTotal : $scope.newDetalle.ImporteTotal
                        }
                        $http.post(url, data).then(function (result) {
                            if (result.data) {
                                $scope.tieneError = false;
                                detalleNuevo.ProductoId = $scope.newDetalle.ProductoId.Id;
                                detalleNuevo.UnidadId = $scope.newDetalle.UnidadId.Id;
                                detalleNuevo.Cantidad = $scope.newDetalle.Cantidad;
                                detalleNuevo.ImporteTotal = $scope.newDetalle.ImporteTotal;
                                var productoNombre = $("#ProductoId option:selected").html();
                                detalleNuevo.NombreProducto = productoNombre;
                                var nombreUnidad = $("#UnidadDeMedidaId option:selected").html();
                                detalleNuevo.NombreUnidad = nombreUnidad;
                                $scope.detallesCompra.push(detalleNuevo);
                                $("#save-aprob-btn").removeClass('disabled');
                                $scope.newDetalle = {};
                                $("#Aprobacion_Fecha").val("");
                                $scope.fetchProductos();
                            } else {
                                $scope.error = "No se puede comprar este producto.";
                                $scope.tieneError = true;
                            }
                        });
                    }

                };

                $scope.closeAlert = function () {
                    $scope.tieneError = false;
                };

                //Used to save a record after edit
                $scope.save = function (data) {
                    $scope.loading = true;
                    var carga = this.carga;
                    carga.CargaId = data.CargaId;
                    carga.Cantidad = data.Cantidad;
                    var cargaNombre = $("#carga_" + carga.Id + " option:selected").html();
                    carga.CargaNombre = cargaNombre;
                    carga.editMode = false;
                    $scope.loading = false;
                };

                $scope.cancelar = function () {
                    $scope.detallesCompra = [];
                    $("#save-carga-btn").addClass('disabled');
                    $scope.newDetalle = {};
                };

                //Used to edit a record
                $scope.borrarCarga = function (index) {
                    $scope.loading = true;
                    var detalle = this.detalle;
                    $http.get('/Compras/EliminarDetalle/' + detalle.Id).then(function (result) {
                        if (result.data) {
                            $scope.tieneError = false;
                            $scope.detallesCompra.splice(index, 1);
                            detalle.editMode = false;
                            $scope.loading = false;
                        } else {
                            $scope.error = "No e puede eliminar el detalle de compra.";
                            $scope.tieneError = true;
                        }
                    });
                };
            }
        ]);

    </script>

}