@using ContabilidadCore.Models
@{
    ViewBag.Title = "Cerrar Periodo";
}

<div ng-show="cerrando" class="row" ng-controller="cierreController">
    @Html.Partial("_ResumenDeEfectivoPartial")

    <h3 class="text-center">EFECTIVO RESTANTE EN CAJA</h3>

    @Html.Partial("_DesgloseEfectivoPartial")
    <div class="row">
        <div class="text-center"><a id="cierre_btn" class="btn btn-primary">Realizar Cierre</a></div>
    </div>
</div>

@section SeccionDerecha
{
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12 text-left">
            <p class="parrafo_derecha">Cerrar periodo</p>
        </div>
    </div>
}

@section scripts
{
    <script>
        $(document).ready(function() {
            $("#cierre_btn").click(function() {
                $("#modalConfirmacion").modal('show');
            });
        });

        function ImprimirCierre(id) {
            var w = window.open('@Url.Action("Cierre","Reportes")' + '/' + id,"_blank");
            //w.onload=function(){
            //    w.focus();
            //    w.setTimeout(function () {
            //        w.print();
            //    }, 1000);
            //    w.close();
            //}
        }

        erp.controller('cierreController', [
            '$scope', '$http', function ($scope, $http) {
                $scope.cerrando = true;

                $scope.urlResumen = '@Url.Action("ResumenEfectivo","PeriodoContable")';
                $scope.fetchResumen = function () {
                    $http.get($scope.urlResumen).then(function (result) {
                        $scope.efectivo_inicial = result.data.EfectivoAnterior;
                        $scope.ventas = result.data.Ventas;
                        $scope.ventas_sin_porciento = result.data.VentasSinPorciento;
                        $scope.ventas_con_porciento = $scope.ventas - $scope.ventas_sin_porciento;
                        $scope.porciento = $scope.ventas_con_porciento * 0.1;
                        $scope.extracciones = result.data.Extracciones;
                        $scope.depositos = result.data.Depositos;
                        $scope.propinas = result.data.Propinas;
                        $scope.efectivo_antes_cierre = $scope.efectivo_inicial+ $scope.ventas + $scope.depositos - $scope.extracciones;
                        $scope.efectivo_a_dejar_en_caja = 0;
                        $scope.efectivo_a_extraer = $scope.efectivo_antes_cierre - $scope.efectivo_a_dejar_en_caja;
                        $scope.centrosDeCosto = result.data.CentrosDeCosto;
                    });
                }

                $scope.fetchResumen();

                $scope.urlDenominaciones = '@Url.Action("DenominacionesData","PeriodoContable")';
                $scope.fetchDenominaciones = function () {
                    $http.get($scope.urlDenominaciones).then(function (result) {
                        $scope.billetes = result.data.Billetes;
                        $scope.monedas = result.data.Monedas;
                    });
                }
                $scope.fetchDenominaciones();

                $scope.calculaEfectivoEnCaja = function () {
                    var valorEnBilleteCup = 0.00;
                    var valorEnBilleteCuc = 0.00;

                    angular.forEach($scope.billetes, function (value, key) {
                        valorEnBilleteCup += value.CantidadCup * value.Valor;
                        valorEnBilleteCuc += value.CantidadCuc * value.Valor;
                    });

                    var valorEnMonedaCup = 0.00;
                    var valorEnMonedaCuc = 0.00;
                    angular.forEach($scope.monedas, function (value, key) {
                        valorEnMonedaCup += value.CantidadCup * value.Valor;
                        valorEnMonedaCuc += value.CantidadCuc * value.Valor;
                    });

                    $scope.efectivo_a_dejar_en_caja = valorEnBilleteCuc + valorEnMonedaCuc + (valorEnBilleteCup / 24) + (valorEnMonedaCup / 24);
                    $scope.efectivo_a_extraer = $scope.efectivo_antes_cierre - $scope.efectivo_a_dejar_en_caja;
                };

                $scope.realizarCierre = function () {
                    if ($scope.efectivo_a_extraer < 0) {
                        toastr.options = { "positionClass": "toast-bottom-right" };
                        window.setTimeout(function () { toastr.error("Efectivo a extraer negativo no se puede cerrar"); }, 1000);
                    } else {
                        var desgloceEfectivoViewModel = {};
                        desgloceEfectivoViewModel.Billetes = $scope.billetes;
                        desgloceEfectivoViewModel.Monedas = $scope.monedas;
                        desgloceEfectivoViewModel.importeAExtraer = $scope.efectivo_a_extraer;
                        $scope.cerrando = false;
                        $http.post('@Url.Action("CerrarPeriodo","PeriodoContable")', desgloceEfectivoViewModel).then(function (result) {
                            if (result.data.result) {
                                ImprimirCierre(result.data.cierreId);
                                $http.post('@Url.Action("CerrarSesion", "Seguridad")').then(function(result) {
                                    window.location = '/Inicio/Index';
                                }
                                    );

                            } else {
                                toastr.options = { "positionClass": "toast-bottom-right" };
                                window.setTimeout(function () { toastr.error(result.data.mensaje); }, 1000);
                            }
                        });
                    }
                }

                $scope.noSePuedeCerrar = function() {
                    return $scope.efectivo_a_extraer < 0;
                }

            }
        ]);
    </script>
}