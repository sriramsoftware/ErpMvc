@using CompraVentaCore.Models
@using ErpMvc.Models
@model IEnumerable<CompraVentaCore.Models.Venta>

@if (Model.Any(c => c.EstadoDeVenta == EstadoDeVenta.Pendiente || c.EstadoDeVenta == EstadoDeVenta.PendienteParaOtroDia))
{
    <div class="alert alert-warning text-center">
        Por favor, recuerde que tiene @Model.Count(c => c.EstadoDeVenta == EstadoDeVenta.Pendiente || c.EstadoDeVenta == EstadoDeVenta.PendienteParaOtroDia || c.EstadoDeVenta == EstadoDeVenta.Facturada) comandas
        en espera de pago del cliente.
    </div>
}

<h1 class="message-body ">Subtotal de Ventas del Día: @String.Format("{0:C}", Model.Sum(v => v.Importe))</h1>
@if (Model.Any())
{


    <div class="row text-center">
        @{
            var centrosDeCosto = Model.SelectMany(vw => vw.Elaboraciones.GroupBy(e => e.Elaboracion.CentroDeCosto).Select(v => new { PuntoDeVenta = v.Key.Nombre, Importe = v.Sum(ve => ve.ImporteTotal) })).GroupBy(e => e.PuntoDeVenta).Select(e => new { PuntoDeVenta = e.Key, Importe = e.Sum(s => s.Importe) });
        }
        @foreach (var pto in centrosDeCosto)
        {
            <div class="col-md-3 col-sm-3 col-xs-12">
                <h4 class="title_insight ">@pto.PuntoDeVenta:<br/> @String.Format("{0:C}", pto.Importe)</h4>
            </div>
        }
        <div class="col-md-3 col-sm-3 col-xs-12">
            <h4 class="title_insight ">Total:<br /> @String.Format("{0:C}", Model.Sum(v => v.Importe))</h4>
        </div>
        <div class="col-md-3 col-sm-3 col-xs-12">
            <h4 class="title_insight ">Propinas:<br /> @String.Format("{0:C}", (ViewBag.Propinas as ICollection<Propina>).Sum(p => p.Importe))</h4>
        </div>
    </div>

            }
<hr />
@if (ViewBag.TotalDeVentasEnEspera > 0)
{
    <div class="alert alert-warning text-center">
        Por favor, recuerde que tiene @ViewBag.TotalDeVentasEnEspera comandas
        en espera de pago del cliente.
    </div>
}

@foreach (var venta in Model)
{
    <div class="row">
        <div class="col-md-5 col-sm-8 col-xs-12">
            <h4 class="title_insight">Comanda # @venta.Id</h4>
            <br />
            @venta.Fecha.ToShortDateString() @venta.Fecha.ToShortTimeString()
            <br />
            <strong>Posición : </strong>&nbsp; @venta.PuntoDeVenta.Nombre - <strong> Pax:</strong> @venta.CantidadPersonas
            <br />
            <strong> Dependiente:</strong> @venta.Vendedor.NombreCompleto
            <br />
            <strong>
                Usuario:
            </strong> @venta.Usuario.UserName
            <br />
            <strong>Estado: </strong>@switch (venta.EstadoDeVenta)
            {
                case EstadoDeVenta.Pendiente:
                    @:<strong>En espera de pago por el cliente</strong>
                            break;
                case EstadoDeVenta.PendienteParaOtroDia:
                    @:<strong>A pagar otro dia</strong>
                            break;
                case EstadoDeVenta.PagadaEnEfectivo:
                    @:<strong>Pagada en efectivo</strong>
                            break;
                case EstadoDeVenta.NoCobrada:
                    @:<strong>Por cuenta de la casa</strong>
                            break;
                case EstadoDeVenta.PagadaPorTarjeta:
                    @:<strong>Pagado con tarjeta de cliente</strong>
                            break;
                    case EstadoDeVenta.Facturada:
                    @:<strong>En espera de pago por el cliente</strong>
                            break;
                    case EstadoDeVenta.PagadaPorFactura:
                    @:<strong>A pagar por factura</strong>
                            break;

}
        </div>
        <div class="col-md-4 col-sm-12 col-xs-12 text-center">
            <label class="badge badge-title">
                @String.Format("{0:C}", venta.Importe)
            </label>
            <br />
            <p>@venta.Observaciones</p>
            @if ((ViewBag.Propinas as ICollection<Propina>).Any(p => p.VentaId == venta.Id))
            {
                <br />
                <strong> Propina:</strong> @String.Format("{0:C}", (ViewBag.Propinas as ICollection<Propina>).SingleOrDefault(p => p.VentaId == venta.Id).Importe)
            }
        </div>
        <div class="col-md-3 col-sm-4 col-xs-12 botones">
            @Ajax.ActionLink("Ver Menus Consumidos", "MenusEnVentaPartial", "Ventas", new { Id = venta.Id }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "Get", UpdateTargetId = "modal-detalle", OnComplete = "mostrarModal" }, new { @class = "btn btn-primary btn-sm col-md-12" })
            <br />
            <a class="btn btn-primary btn-sm col-md-12 print-vale-btn" href="javascript:;" data-id="@venta.Id" data-estado="@venta.EstadoDeVenta">
                <i class="glyphicon glyphicon-print"></i>&nbsp;Imprimir Reporte
            </a>
            @if (venta.EstadoDeVenta == EstadoDeVenta.Pendiente || venta.EstadoDeVenta == EstadoDeVenta.PendienteParaOtroDia || venta.EstadoDeVenta == EstadoDeVenta.Facturada)
            {
                <br />
                <a class="btn btn-primary btn-sm col-md-12 pagar-vale-btn" data-id="@venta.Id">
                    <i class="glyphicon glyphicon-usd"></i>&nbsp;Pagar Vale
                </a>
            }
            @if (venta.EstadoDeVenta == EstadoDeVenta.PagadaEnEfectivo && !(ViewBag.Propinas as ICollection<Propina>).Any(p => p.VentaId == venta.Id))
                {
                <br />
                <a class="btn btn-primary btn-sm col-md-12 propina-btn" data-id="@venta.Id">
                    <i class="glyphicon glyphicon-usd"></i>&nbsp;Propina
                </a>
            }
            @if (User.IsInRole(RolesMontin.Administrador) || (venta.EstadoDeVenta != EstadoDeVenta.PagadaEnEfectivo && venta.EstadoDeVenta != EstadoDeVenta.PagadaPorTarjeta&& venta.EstadoDeVenta != EstadoDeVenta.Facturada))
            {
                <br />
                <a href="@Url.Action("Editar", "Ventas", new {Id = venta.Id})" class="btn btn-primary btn-sm col-md-12">
                    <i class="glyphicon glyphicon-edit"></i>&nbsp;Editar Comanda
                </a>
                <br />
                <a class="btn btn-primary btn-sm col-md-12 eliminar-venta-btn" data-id="@venta.Id">
                    <i class="glyphicon glyphicon-trash"></i>&nbsp;Eliminar esta venta
                </a>
            }
            @if (venta.EstadoDeVenta == EstadoDeVenta.Pendiente)
            {
                <br />
                <a class="btn btn-info btn-sm col-md-6 otro-dia-btn" data-id="@venta.Id">
                    &nbsp;Otro dia
                </a>
                    <a class="btn btn-primary btn-sm col-md-6 por-casa-btn" data-id="@venta.Id">
                        &nbsp;Por la casa
                    </a>

            }

        </div>
    </div>
    <hr />
}
