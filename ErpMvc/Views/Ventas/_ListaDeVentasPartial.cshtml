@using CompraVentaCore.Models
@model IEnumerable<CompraVentaCore.Models.Venta>

@if (Model.Any(c => c.EstadoDeVenta == EstadoDeVenta.Pendiente || c.EstadoDeVenta == EstadoDeVenta.PendienteParaOtroDia))
{
    <div class="alert alert-warning text-center">
        Por favor, recuerde que tiene @Model.Count(c => c.EstadoDeVenta == EstadoDeVenta.Pendiente || c.EstadoDeVenta == EstadoDeVenta.PendienteParaOtroDia) comandas
        en espera de pago del cliente.
    </div>
}

<h1 class="message-body ">Subtotal de Ventas del Día: @String.Format("{0:C}", Model.Sum(v => v.Importe))</h1>
@if (Model.Any())
{


    <div class="row text-center">
        @{
            var puntosDeVenta = Model.GroupBy(v => v.PuntoDeVenta).Select(v => new { PuntoDeVenta = v.Key.Nombre, Importe = v.Sum(ve => ve.Importe) });
        }
        @foreach (var pto in puntosDeVenta)
        {
            <div class="col-md-3 col-sm-3 col-xs-12">
                <h4 class="title_insight ">@pto.PuntoDeVenta:<br /> @String.Format("{0:C}", pto.Importe)</h4>
            </div>
        }
        <div class="col-md-3 col-sm-3 col-xs-12">
            <h4 class="title_insight ">Total:<br /> @String.Format("{0:C}", Model.Sum(v => v.Importe))</h4>
        </div>
    </div>

            }
<hr />
@if (ViewBag.TotalDeVentasEnEspera > 0)
{
    <div class="alert alert-warning text-center">
        Por favor, recuerde que tiene @ViewBag.TotalDeVentasEnEspera comandas
        en espera de pago del cliente.
    </div>
}

@foreach (var venta in Model)
{
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12 text-center">
            <label class="badge badge-title">
                @String.Format("{0:C}", venta.Importe)
            </label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-12">
            <h4 class="title_insight">@venta.DiaContable.Fecha.ToShortDateString() @venta.Hora.ToString(@"hh\:mm")</h4>
            <br />
            Posición en el Local:&nbsp; @venta.PuntoDeVenta.Nombre
            <br />
            Dependiente: @venta.Vendedor.NombreCompleto
            <br />
            Usuario: @venta.Usuario.UserName
            <br />
            Estado: @switch (venta.EstadoDeVenta)
                {
                    case EstadoDeVenta.Pendiente:
                    @:<strong>En espera de pago por el cliente</strong>
                                break;
                    case EstadoDeVenta.PendienteParaOtroDia:
                    @:<strong>A pagar otro dia</strong>
                                break;
                    case EstadoDeVenta.PagadaEnEfectivo:
                    @:<strong>Pagada en efectivo</strong>
                                break;
                    case EstadoDeVenta.NoCobrada:
                    @:<strong>Por cuenta de la casa</strong>
                                break;
                    case EstadoDeVenta.PagadaPorTarjeta:
                    @:<strong>Pagado con tarjeta de cliente</strong>
                                break;
                }
        </div>
        <div class="col-md-4 col-sm-4 col-xs-12 botones">
            @Ajax.ActionLink("Ver Menus Consumidos", "MenusEnVentaPartial", "Ventas", new { Id = venta.Id }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "Get", UpdateTargetId = "modal-detalle", OnComplete = "mostrarModal" }, new { @class = "btn btn-primary btn-sm col-md-12" })
            <br />
            <a id="print-vale-btn" class="btn btn-primary btn-sm col-md-12" data-id="@venta.Id">
                <i class="glyphicon glyphicon-print"></i>&nbsp;Imprimir Reporte
            </a>
            @if (venta.EstadoDeVenta == EstadoDeVenta.NoCobrada || venta.EstadoDeVenta == EstadoDeVenta.Pendiente || venta.EstadoDeVenta == EstadoDeVenta.PendienteParaOtroDia)
                {
                <br />
                <a id="pagar-vale-btn" class="btn btn-primary btn-sm col-md-12" data-id="@venta.Id">
                    <i class="glyphicon glyphicon-usd"></i>&nbsp;Pagar Vale
                </a>
            }
            @if (venta.EstadoDeVenta == EstadoDeVenta.Pendiente)
                {
                <br />
                <a href="@Url.Action("Editar", "Ventas", new {Id = venta.Id})" class="btn btn-primary btn-sm col-md-12">
                    <i class="glyphicon glyphicon-edit"></i>&nbsp;Editar Comanda
                </a>
                    <br />
                    <a id="eliminar-venta-btn" class="btn btn-primary btn-sm col-md-12" data-id="@venta.Id">
                        <i class="glyphicon glyphicon-trash"></i>&nbsp;Eliminar esta venta
                    </a>
            }
        </div>
    </div>
    <hr />
}
